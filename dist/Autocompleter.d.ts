import { AutocompleterOptions, AutocompleterCallbacks, Suggester, Suggestion, GlobalState, SuggesterOptions } from './types';
export declare class Autocompleter {
    private options;
    private suggesters;
    private registeredSuggesters;
    private suggestions;
    private suggestersByName;
    private pendingRequests;
    private currentText;
    private numPendingRequests;
    private appendResults;
    private bufferedResults;
    private flushTimer;
    private appendBufferedResults;
    private globalState;
    private onSuggestions;
    private onCompleteSuggestions;
    private onUpdate;
    private onError;
    private onMessage;
    private onBufferResults;
    constructor(callbacks?: AutocompleterCallbacks, options?: Partial<AutocompleterOptions>);
    private initializeCallbacks;
    private initializeState;
    private initializeRegisteredSuggesters;
    setCallbacks(callbacks: AutocompleterCallbacks): void;
    getSuggesters(): Suggester[];
    addSuggester(suggester: string | Suggester, options?: Partial<SuggesterOptions>): boolean;
    private createSuggester;
    removeSuggester(suggester: string | Suggester): void;
    updateCoordenadas(suggestion: Suggestion): Promise<any>;
    private fetchCoordenadas;
    updateSuggestions(newValue: string): void;
    private abortPendingRequests;
    private suggest;
    private handleSuggestions;
    private checkForCompleteSuggestions;
    private handleAbort;
    private handleServerRequest;
    private handleServerResponse;
    private logDebug;
    bufferResults(results: Suggestion[], appendResults: boolean): void;
    private handleBufferCallback;
    getGlobalState(): GlobalState;
    isInitialized(): boolean;
}
export default Autocompleter;
